Why do we need (R)DBMS?	Why not just store data as files in the file system?

- store remotely
- built in packages 
	-- reduced application development time
	-- SQL
- portability
- secure -- DBMS offer security which is suitable for DBs
-- optimized 
	-- storage of data (column store, compression schemes..)
	-- optimizing statements -- query optimizer
-- guarantees provided by a DB system
	-- crash recovery
	-- concurrent access
	
Query Optimizer: statement -> a "good" way of getting the results of the statement
heuristics
cost-based optimizer -- estimate the cost of different options and choose the one which is expected to have the least cost.

select *
from Employees
where project = 'Data Maintenance';

for every row x in Employees
	if (x.project = 'Data Maintenance')
		add x to the result

index is created on your table
look up the project index and find the entry for 'Data Maintenance'
get the necessary rows
		
Students in a table
Employee
(name, ssn, eID, personnel records, project)

----------------

Physical schema -- what indexes are available, how data is stored, ...
DB administrator -- monitors the performance and changes physical schema as appropriate

Physical Data Independence -- user applications do not change even when physical schema changes
Logical Data Independence -- later (views or external schema)

----------------------

concurrent access
example: booking seats on a flight
constraint: one reservation for a seat

crash recovery
example:
transferring $100 from acct1 to acct2

1. acct1 = acct1 - 100;
---- system crash -------
2. acct2 = acct2 + 100;

------------------------

Transaction -- DB
	-- 1 or more actions grouped together to perform as a single atomic action
	
begin transaction
	1. acct1 = acct1 - 100;
	2. acct2 = acct2 + 100;
end transaction

log (persistent)

log								DB
begin transaction - 1101
(acct1, 700, 600)
(acct2, 200, 300)
								acct1 = 600
								acct2 = 300
end transaction 1101

--------------------------

(700, 200)
	(600, 300)
	(700, 200)

--------------------------

ER (Entity Relationship) Model

Student entities:
Cason
Brent

Course entities:
384
375

Cason -- 384 
Cason -- 375
Brent -- 384

------------

set of application requirements

Conceptual Modeling: application requirements -> Conceptual schema for your application

How do we represent the conceptual schema:
Different Data Models:
UML, ORM, ER <---

----------------

Entity set
	-- Attributes

Student entity set
	sID
	sName
	sMajor
	...

Representation:
Entity set: rectangle
Attributes: ovals connected to the respective entity set

-------------

Beers
name		manf
Budweiser	A-B
BudLight	A-B
...

---------------------

Bars
	barName, address

Sells: relationship between Beer entities and Bar entities





