
Sets -- collection of objects (a) no duplicates (b) no order among elements

Relations -- table; defined over 1 or more sets; sets

Student: sID = {1, 2, 3, 4};
		 sName = {A, B, C}
		 sMajor = {CIS, CSC}
		 
what is the number of rows in the smallest table? -- 0
what is the number of rows in the largest table? -- 24

1	A	CIS
1	A	CSC
1	B	CIS
...

Relational DB/Relational Model -- Codd -- data represented as tables (1970)

Functions: Domain -> Range
f(d) = one value in range

one-to-one, onto, bijection

------------------

Student
	-- 3 columns sID, sName, sMajor.. structure
	-- no 2 students have the same SID.. constraint
		-- no 2 rows in the Student table have the same value for sID (key constraint)
		
just note the connection between key constraint and functions (we will revisit later)
sID -> sName

--------------------

Relational Model:
	schema for a table - structure of the table and the constraints for the table
	schema for a DB -- schema for all the tables.
	
---------------------

Data Model:
Examples: Relational Model, ER (Entity-Relationship) Model, hierarhical model

Any data model: structure, constraints, operations 
		
-----------------------

Conceptual Modeling -- ER Model
Logical Modeling -- Relational Model

-----------------------

DB software
Why do we need (R)DBMS?	Why not just store data as files in the file system?

- store remotely
- built in packages
- portability
- secure
		
		

		
		
