-- Cason Konzer HW 3  -- 3/10/21

/* 1.
    Product (maker, model, type)
    PC (model, speed, ram, hd, price)

    The Product relation gives the manufacturer, model number and type (PC, laptop, or printer) of various products.
    We assume for convenience that model numbers are unique over all manufacturers and product types 
    (i.e., model forms the key for Product). The PC relation gives for each model number that is a PC, the speed 
    (of the processor in GHz), the amount of RAM (in megabytes), the size of the hard disk  
    (in gigabytes), and the price. 
*/

/*
DROP TABLE PRODUCT;
DROP TABLE PC;
*/

CREATE TABLE PRODUCT (
    pmodel VARCHAR2(6) PRIMARY KEY,
    maker VARCHAR2(2),
    ptype VARCHAR2(8)
);

CREATE TABLE PC (
    pcmodel VARCHAR2(20),
    speed NUMBER(*,2),
    ram NUMBER, 
    hd NUMBER,
    price NUMBER(*,2),
    FOREIGN KEY (pcmodel) REFERENCES PRODUCT ON DELETE CASCADE
);

/* 2.
    Consider the schema for FreeChecking Bank, that we designed in HW2.
    Translate the given ER schema into SQL CREATE TABLE statements (indicating primary key, unique and foreign key constraints). 
*/

/*
DROP TABLE CUSTOMERS;
DROP TABLE ACCOUNTS;
DROP TABLE OWNS;
*/

CREATE TABLE CUSTOMERS(
    ssNo VARCHAR2(9) PRIMARY KEY,
    cname VARCHAR(20),
    phone VARCHAR2(10),
    address VARCHAR(35)
);

CREATE TABLE ACCOUNTS(
    anumber VARCHAR2(12) PRIMARY KEY,
    atype VARCHAR2(12),
    balance VARCHAR2(15)
);

CREATE TABLE OWNS(
    account VARCHAR(12) REFERENCES ACCOUNTS,
    customer VARCHAR(9) REFERENCES CUSTOMERS,
    PRIMARY KEY (account, customer)
);

/* 3.
    Consider the E/R schema with weak entity sets shown below. 
    Come up with the SQL CREATE TABLE statements (with appropriate primary key, unique and foreign key constraints). 
*/

/*
DROP TABLE PLAYER;
DROP TABLE TEAM;
DROP TABLE LEAGUE;
*/

CREATE TABLE LEAGUE(
    lname VARCHAR2(15) PRIMARY KEY,
    yrEstablished VARCHAR(4)
);

CREATE TABLE TEAM(
    lname VARCHAR2(15) REFERENCES LEAGUE,
    tname VARCHAR2(15) UNIQUE,
    mgr VARCHAR2(15),
    PRIMARY KEY (lname, tname)
);

CREATE TABLE PLAYER(
    tname VARCHAR(15) REFERENCES TEAM(tname),
    pnum VARCHAR(3) UNIQUE,
    pname VARCHAR(15),
    PRIMARY KEY (tname, pnum)
);

/* 4.
    Consider entity type Employee with attributes empNumber (this is unique), empName, and the year when he/she was hired. 
    An employee can either be a technical employee, a marketing employee, or a business executive. 
    For a technical employee, we know his/her undergraduate degree major. 
    For a marketing employee, we know the revenue generated by this employee to date. 
    For a business executive, we know the number of years of experience. 
*/

/*
DROP TABLE TECHNICAL;
DROP TABLE MARKETING;
DROP TABLE BUSINESS;
DROP TABLE EMPLOYEE;
*/

CREATE TABLE EMPLOYEE(
    empNumber VARCHAR2(15) PRIMARY KEY,
    empName VARCHAR2(30),
    hireYear VARCHAR(4)
);

CREATE TABLE TECHNICAL(
    empNumber VARCHAR2(15) PRIMARY KEY REFERENCES EMPLOYEE,
    major VARCHAR(20)
);

CREATE TABLE MARKETING(
    empNumber VARCHAR2(15) PRIMARY KEY REFERENCES EMPLOYEE,
    revenue VARCHAR(20)
);

CREATE TABLE BUSINESS(
    empNumber VARCHAR2(15) PRIMARY KEY REFERENCES EMPLOYEE,
    yrsExp VARCHAR(2)
);

/* 5.
    Consider the ER schema below for the MoneyMaking supermarket chain problem from HW2.
    Translate the given ER schema into SQL CREATE TABLE statement.
    Note: you may also want to try to translate the instance given in HW2 into INSERT statements.
*/

/*
DROP TABLE WORKS;
DROP TABLE EMPLOYEE;
DROP TABLE INCLUDES;
DROP TABLE WASAT;
DROP TABLE STORES;
DROP TABLE PARTOF;
DROP TABLE PRODUCT;
DROP TABLE PAIDFOR;
DROP TABLE SALE;
DROP TABLE CUSTOMER;
*/

CREATE TABLE STORES(
    city VARCHAR2(20) PRIMARY KEY,
    saddress VARCHAR2(30)
);

CREATE TABLE EMPLOYEE(
    empID VARCHAR2(15) PRIMARY KEY,
    eaddress VARCHAR2(30),
    salary VARCHAR2(12),
    erank VARCHAR2(4),
    joinYear VARCHAR2(4)
);

CREATE TABLE WORKS(
    empID VARCHAR2(15) PRIMARY KEY,
    city VARCHAR(20),
    UNIQUE (empID, city)
);

INSERT INTO WORKS (empID)
    SELECT empID
    FROM EMPLOYEE;

INSERT INTO WORKS (city)
    SELECT city
    FROM STORES;

CREATE TABLE PRODUCT(
    pName VARCHAR2(15) PRIMARY KEY,
    category VARCHAR(15)
);

CREATE TABLE INCLUDES(
    city VARCHAR(20),
    pName VARCHAR2(15),
    qty VARCHAR(5),
    UNIQUE (city, pName)
);

INSERT INTO INCLUDES (city)
    SELECT city
    FROM STORES;

INSERT INTO INCLUDES (pName)
    SELECT pName
    FROM PRODUCT;

CREATE TABLE SALE(
    saleID VARCHAR2(15) PRIMARY KEY,
    sdate DATE
);

CREATE TABLE WASAT(
    city VARCHAR(20),
    saleID VARCHAR2(15) PRIMARY KEY,
    UNIQUE (city, saleID)
);

INSERT INTO WASAT (city)
    SELECT city
    FROM STORES;

INSERT INTO WASAT (saleID)
    SELECT saleID
    FROM SALE;

CREATE TABLE PARTOF(
    saleID VARCHAR2(15),
    pName VARCHAR2(15),
    qty VARCHAR(5),
    UNIQUE (saleID, pName)
);

INSERT INTO PARTOF (pName)
    SELECT pName
    FROM PRODUCT;

INSERT INTO PARTOF (saleID)
    SELECT saleID
    FROM SALE;

CREATE TABLE CUSTOMER(
    cardNo VARCHAR2(15) PRIMARY KEY,
    caddress VARCHAR2(30)
);

CREATE TABLE PAIDFOR(
    saleID VARCHAR2(15) PRIMARY KEY,
    cardNo VARCHAR2(15),
    UNIQUE (saleID, cardNo)
);

-- how much time it takes by the DB server to perform any operation
set timing on;